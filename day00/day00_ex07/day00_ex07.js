/*

Напишите функцию, описывающую базовое поведение банкомата, которая принимает на вход число и возвращает объект в формате  {номинал_купюры : количество_купюр}. 
Условия работы функции:
- Если банкомат не может выдать данную сумму, то выводится ошибка 'Incorrect value'
- Купюры должны выдаться оптимальным образом (вместо 5 купюр номиналом 1000 выдается одна 5000)
- За раз банкомат может выдавать не более 20 купюр, если купюр для выдачи не хватает, то выводится ошибка 'Limit exceeded'

*/

function atm(sum) {
    const banknots = [5000, 2000, 1000, 500, 200, 100, 50];
    // создание пустого объекта, который будет содержать результат размена
    const result = {};
    // проверка, является ли сумма не кратной 50
    if (sum % 50 !== 0) {
        return "AHTUNG: Incorrect value";
    }
    // проверка, превышает ли сумма 100000
    if (sum > 100000) {
        return "AHTUNG: Limit exceeded";
    }
    // начало цикла, в котором происходит размен суммы на банкноты
    for (const nominal of banknots) {
        // вычисление количества банкнот данного номинала в сумме
        const count = Math.floor(sum / nominal);
        // проверка, есть ли хотя бы одна банкнота данного номинала в сумме
        if (count > 0) {
            // запись количества банкнот данного номинала в объект
            result[nominal] = count;
            // вычитание из суммы суммы данного номинала.
            sum -= count * nominal;
        }
    }
    // отсортировываем строку с результатами
    const sortedResult = Object.entries(result)
        .sort(([a], [b]) => b - a) // сортируем в обратном порядке по номиналу банкноты
        .map(([nominal, count]) => `${nominal} : ${count}`)
        .join(", ");
    return `{${sortedResult} }`;
}

console.log(atm(8350));
console.log(atm(2570));
console.log(atm(100050));
  